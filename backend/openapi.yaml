openapi: 3.0.3
info:
    title: symfony-starter-kit
    version: 1.0.0
servers:
    -   url: '/api'
paths:
    /profile/{userId}/info:
        get:
            summary: 'Запросить информацию о профиле'
            tags: ['Профиль']
            parameters:
                - $ref: '#/components/parameters/userId'
            responses:
                200:
                    description: 'Информация о пользователе'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userResponse'
                404:
                    description: 'Пользователь не найден'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /profile/{userId}/update:
        post:
            summary: 'Обновить профиль пользователя'
            tags: [ 'Профиль' ]
            parameters:
                - $ref: '#/components/parameters/userId'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                name:
                                    type: string
                                    description: 'Имя пользователя'
                                    example: 'Иванов Иван Иванович'
                                phone:
                                    type: string
                                    description: 'Телефон'
                                    example: '+7 000 111 22 33'
                                    nullable: true
                            additionalProperties: false
                            required:
                                - name
            responses:
                200:
                    description: 'Профиль обновлен'
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    -   $ref: '#/components/schemas/userResponse'
                                    -   $ref: '#/components/schemas/errorResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                404:
                    description: 'Статья не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /sign-up:
        post:
            summary: 'Регистрация пользователя'
            tags: [ 'Аутентификация' ]
            security: [ ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: 'Email пользователя'
                                    example: 'test@test.ru'
                                password:
                                    type: string
                                    description: 'Пароль пользователя'
                                    minLength: 6
                                    example: '123456'
                            additionalProperties: false
                            required:
                                - email
            responses:
                200:
                    description: 'Пользователь успешно зарегистрирован'
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    -   $ref: '#/components/schemas/successResponse'
                                    -   $ref: '#/components/schemas/errorResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'

    /confirm-email/{confirmToken}:
        get:
            summary: 'Подтверждение email'
            tags: [ 'Аутентификация' ]
            security: [ ]
            parameters:
                - $ref: '#/components/parameters/confirmToken'
            responses:
                200:
                    description: 'Email подтвержден'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Email уже подтвержден'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                404:
                    description: 'Email с таким токеном не найден'
    /sign-in:
        post:
            summary: 'Аутентификация пользователя'
            tags: [ 'Аутентификация' ]
            security: [ ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: 'Email пользователя'
                                    example: 'test@test.ru'
                                password:
                                    type: string
                                    description: 'Пароль пользователя'
                                    example: 'qwer1234'
                            additionalProperties: false
                            required:
                                - email
                                - password
            responses:
                200:
                    description: 'Аутентификация прошла успешно'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                401:
                    description: 'Ошибка аутентификации'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Не верный логин или пароль'
    /logout:
        get:
            summary: 'Выйти из приложения'
            tags: [ 'Аутентификация' ]
            responses:
                200:
                    description: 'Выход прошел успешно'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'
    /tasks:
        get:
            summary: 'Список задач'
            tags: [ 'Задачи' ]
            responses:
                200:
                    description: 'Возвращает список задач'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    required:
                                        - id
                                        - taskName
                                        - isCompleted
                                        - createdAt
                                    additionalProperties: false
                                    properties:
                                        id:
                                            type: string
                                            format: uuid
                                            description: 'ID задачи'
                                            example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                                        taskName:
                                            type: string
                                            description: 'Наименование задачи'
                                            example: 'Моя первая задача'
                                        isCompleted:
                                            type: boolean
                                            description: 'Выполнена ли задача'
                                            example: true
                                        createdAt:
                                            type: string
                                            description: 'Дата создания'
                                            example: '2021-10-28T16:19:44+00:00'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /tasks/{taskId}:
        get:
            summary: 'Подробная информация по задаче'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Возвращает подробную информацию по задаче'
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - id
                                    - taskName
                                    - isCompleted
                                    - createdAt
                                    - completedAt
                                    - updatedAt
                                additionalProperties: false
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: 'ID задачи'
                                        example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                                    taskName:
                                        type: string
                                        description: 'Наименование задачи'
                                        example: 'Моя первая задача'
                                    isCompleted:
                                        type: boolean
                                        description: 'Выполнена ли задача'
                                        example: true
                                    createdAt:
                                        type: string
                                        description: 'Дата создания'
                                        example: '2021-10-28T16:19:44+00:00'
                                    completedAt:
                                        type: string
                                        description: 'Дата завершения'
                                        example: '2021-10-28T16:19:44+00:00'
                                        nullable: true
                                    updatedAt:
                                        type: string
                                        description: 'Дата обновления'
                                        example: '2021-10-28T16:19:44+00:00'
                                        nullable: true
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /tasks/create:
        post:
            summary: 'Создать задачу'
            tags: [ 'Задачи' ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                taskName:
                                    type: string
                                    description: 'Наименование задачи'
                                    example: 'Моя первая задача'
                            additionalProperties: false
                            required:
                                - taskName
            responses:
                200:
                    description: 'Задача создана'
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - id
                                additionalProperties: false
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: 'ID задачи'
                                        example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /tasks/{taskId}/update-task-name:
        post:
            summary: 'Обновить наименование задачи'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                taskName:
                                    type: string
                                    description: 'Наименование задачи'
                                    example: 'Моя вторая задача'
                            additionalProperties: false
                            required:
                                - taskName
            responses:
                200:
                    description: 'Наименование задачи обновлено'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /tasks/{taskId}/remove:
        post:
            summary: 'Удаляет задачу'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Задача удалена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /tasks/{taskId}/complete:
        post:
            summary: 'Завершает задачу'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Задача завершена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Задача уже выполнена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /tasks/{taskId}/add-comment:
        post:
            summary: 'Добавление комментария к задаче'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                commentBody:
                                    type: string
                                    description: 'Текст комментария'
                                    example: 'Мой первый комментарий'
                            required:
                                - commentBody
            responses:
                200:
                    description: 'Комментарий успешно добавлен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Нельзя добавлять комментарий в выполненную задачу'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'
    /tasks/{taskId}/comments:
        get:
            summary: 'Получить список комментариев к задаче'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Список'
                    content:
                        application/json:
                            schema:
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: 'ID комментария'
                                        example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                                    body:
                                        type: string
                                        description: 'Текст комментария'
                                        example: 'Мой первый комментарий'
                                    createdAt:
                                        type: string
                                        description: 'Дата создания'
                                        example: '2021-10-28T16:19:44+00:00'
                                    updatedAt:
                                        type: string
                                        description: 'Дата обновления'
                                        example: '2021-10-28T16:19:44+00:00'
                                        nullable: true
    /export/tasks.{format}:
        get:
            summary: 'Экспорт задач в нужном формате'
            tags: [ 'Задачи' ]
            parameters:
                -   in: path
                    name: format
                    required: true
                    description: 'Формат (csv, xml)'
                    example: 'csv'
                    schema:
                        type: string
                        enum:
                            - csv
                            - xml
            responses:
                200:
                    description: 'Список задач успешно экспортирован'
                    content:
                        text/csv:
                            schema:
                                type: string
                                example: '2021-11-16T16:52:08+00:00,Задача 1,выполнена'
                        text/xml:
                            schema:
                                type: string
                                example: '<?xml version="1.0"?><response><item key="0"><id>da5b20a7-3c8b-4516-bc7c-7297c0e2f686</id><createdAt>2022-07-12T12:13:23+00:00</createdAt><taskName>Тестовая задача</taskName><isCompleted>0</isCompleted></item></response>'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /article/list:
        get:
            summary: 'Получить список статей'
            tags: [ 'Статьи' ]
            security: [ ]
            responses:
                200:
                    description: 'Возвращает список статей'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    required:
                                        - title
                                        - alias
                                        - body
                                    additionalProperties: false
                                    properties:
                                        title:
                                            type: string
                                            description: 'Заголовок'
                                            example: 'Первая статья'
                                        alias:
                                            type: string
                                            description: 'Алиас'
                                            example: 'first-article'
                                        body:
                                            type: string
                                            description: 'Контент'
                                            example: 'Контент первой статьи'
                                            nullable: true

    /article/{alias}/info:
        get:
            summary: 'Получить данные по статье'
            tags: [ 'Статьи' ]
            security: [ ]
            parameters:
                -   in: path
                    name: alias
                    required: true
                    description: 'Алиас статьи'
                    example: 'first-article'
                    schema:
                        type: string
            responses:
                200:
                    description: 'Возвращает статью'
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - title
                                    - body
                                additionalProperties: false
                                properties:
                                    title:
                                        type: string
                                        description: 'Заголовок'
                                        example: 'Первая статья'
                                    body:
                                        type: string
                                        description: 'Контент'
                                        example: 'Контент первой статьи'
                                        nullable: true
                404:
                    description: 'Статья не найдена'

    /admin/article/create:
        post:
            summary: 'Создать статью'
            tags: [ 'Статьи' ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                title:
                                    type: string
                                    description: 'Заголовок'
                                    example: 'Первая статья'
                                alias:
                                    type: string
                                    description: 'Алиас'
                                    example: 'first-article'
                                body:
                                    type: string
                                    description: 'Контент'
                                    example: 'Контент первой статьи'
                                    nullable: true
                            additionalProperties: false
                            required:
                                - title
                                - alias
            responses:
                200:
                    description: 'Статья создана'
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    -   $ref: '#/components/schemas/articleResponse'
                                    -   $ref: '#/components/schemas/errorResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'


    /admin/article/{articleId}/update:
        post:
            summary: 'Обновить статью'
            tags: [ 'Статьи' ]
            parameters:
                -   $ref: '#/components/parameters/articleId'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                title:
                                    type: string
                                    description: 'Заголовок'
                                    example: 'Первая статья'
                                alias:
                                    type: string
                                    description: 'Алиас'
                                    example: 'first-article'
                                body:
                                    type: string
                                    description: 'Контент'
                                    example: 'Контент первой статьи'
                                    nullable: true
                            additionalProperties: false
                            required:
                                - title
                                - alias
            responses:
                200:
                    description: 'Статья обновлена'
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    -   $ref: '#/components/schemas/articleResponse'
                                    -   $ref: '#/components/schemas/errorResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Неверный формат запроса'
                404:
                    description: 'Статья не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /admin/article/list:
        get:
            summary: 'Получить список статей'
            tags: [ 'Статьи' ]
            responses:
                200:
                    description: 'Список статей'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/articleResponse'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'

    /admin/article/{articleId}/info:
        get:
            summary: 'Получить информацию по статье'
            tags: [ 'Статьи' ]
            parameters:
                -   $ref: '#/components/parameters/articleId'
            responses:
                200:
                    description: 'Информация по статье'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/articleResponse'
                404:
                    description: 'Статья не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'


    /admin/article/{articleId}/remove:
        post:
            summary: 'Удалить статью'
            tags: [ 'Статьи' ]
            parameters:
                -   $ref: '#/components/parameters/articleId'
            responses:
                200:
                    description: 'Статья удалена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                404:
                    description: 'Статья не найдена'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: 'Необходимо пройти аутентификацию'
components:
    securitySchemes:
        ApiTokenAuth:
            type: apiKey
            in: header
            name: X-AUTH-TOKEN
    schemas:
        successResponse:
            type: object
            required:
                - success # Указываем что параметр success обязателен
            additionalProperties: false
            properties:
                success:
                    enum: [ true ]
                    type: boolean
                    default: true
        errorResponse:
            type: object
            required:
                - error
                - code
                - errorMessage
            additionalProperties: false
            properties:
                error:
                    type: boolean
                    enum: [ true ]
                    default: true
                code:
                    type: integer
                errorMessage:
                    type: string
            example:
                error: true
                code: 1
                errorMessage: 'Ошибка валидации'
        authResponse:
            type: object
            required:
                - token
            additionalProperties: false
            properties:
                token:
                    type: string
                    format: uuid
                    example: '123e4567-e89b-12d3-a456-426614174000'
        articleResponse:
            type: object
            additionalProperties: false
            required:
                - id
                - title
                - alias
                - createdAt
            properties:
                id:
                    type: string
                    format: uuid
                    description: 'ID'
                    example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                title:
                    type: string
                    description: 'Заголовок'
                    example: 'Первая статья'
                alias:
                    type: string
                    description: 'Алиас'
                    example: 'first-article'
                body:
                    type: string
                    description: 'Контент'
                    example: 'Контент первой статьи'
                    nullable: true
                createdAt:
                    type: string
                    description: 'Дата создания'
                    example: '2021-10-28T16:19:44+00:00'
                updatedAt:
                    type: string
                    description: 'Дата обновления'
                    example: '2021-10-28T16:19:44+00:00'
                    nullable: true
        userResponse:
            type: object
            additionalProperties: false
            required:
                - id
                - name
                - phone
            properties:
                id:
                    type: string
                    format: uuid
                    description: 'ID'
                    example: 'dc8dbada-b154-4ffb-b21c-da70162e2705'
                name:
                    type: string
                    description: 'Имя'
                    example: 'Иванов Иван Иванович'
                phone:
                    type: string
                    description: 'Телефон'
                    example: '+7 000 111 22 33'

    parameters:
        taskId:
            name: taskId
            in: path
            required: true
            description: 'ID задачи'
            example: '123e4567-e89b-12d3-a456-426614174000'
            schema:
                type: string
                format: uuid
        articleId:
            name: articleId
            in: path
            required: true
            description: 'ID статьи'
            example: '123e4567-e89b-12d3-a456-426614174000'
            schema:
                type: string
                format: uuid
        confirmToken:
            name: confirmToken
            in: path
            required: true
            description: 'Токен подтверждения'
            example: '123e4567-e89b-12d3-a456-426614174000'
            schema:
                type: string
                format: uuid
        userId:
            name: userId
            in: path
            required: true
            description: 'ID пользователя'
            example: '123e4567-e89b-12d3-a456-426614174000'
            schema:
                type: string
                format: uuid
security:
    -   ApiTokenAuth: [ ]
