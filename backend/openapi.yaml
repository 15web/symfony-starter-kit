openapi: 3.0.3
info:
    title: symfony-starter-kit
    version: 1.0.0
servers:
    -   url: '/api'
paths:
    /sign-up:
        post:
            summary: 'Регистрация пользователя'
            tags: [ 'Аутентификация' ]
            security: [ ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: 'Email пользователя'
                                    example: 'test@test.ru'
                            required:
                                - email
            responses:
                200:
                    description: 'Пользователь успешно зарегистрирован'
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    -   $ref: '#/components/schemas/successResponse'
                                    -   $ref: '#/components/schemas/errorResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorBadRequest'
    /sign-in:
        post:
            summary: 'Аутентификация пользователя'
            tags: [ 'Аутентификация' ]
            security: [ ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: 'Email пользователя'
                                    example: 'test@test.ru'
                                password:
                                    type: string
                                    description: 'Пароль пользователя'
                                    example: 'qwer1234'
                            required:
                                - email
                                - password
            responses:
                200:
                    description: 'Аутентификация прошла успешно'
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    -   $ref: '#/components/schemas/authResponse'
                                    -   $ref: '#/components/schemas/errorResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorBadRequest'
                401:
                    description: 'Не верный логин или пароль'
                    content:
                        application/json:
                            schema:
                                properties:
                                    error:
                                        type: string
    /logout:
        get:
            summary: 'Выйти из приложения'
            tags: [ 'Аутентификация' ]
            responses:
                200:
                    description: 'Выход прошел успешно'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                401:
                    description: 'Доступ запрещен'
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
    /tasks:
        get:
            summary: 'Список задач'
            tags: [ 'Задачи' ]
            responses:
                200:
                    description: 'Возвращает список задач'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: string
                                            format: uuid
                                            description: 'ID задачи'
                                            example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                                        taskName:
                                            type: string
                                            description: 'Наименование задачи'
                                            example: 'Моя первая задача'
                                        isCompleted:
                                            type: boolean
                                            description: 'Выполнена ли задача'
                                            example: true
                401:
                    description: 'Доступ запрещен'

    /tasks/{id}:
        get:
            summary: 'Подробная информация по задаче'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Возвращает подробную информацию по задаче'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: 'ID задачи'
                                        example: 'dc8dbada-b154-4ffb-b21c-da70162e2704'
                                    taskName:
                                        type: string
                                        description: 'Наименование задачи'
                                        example: 'Моя первая задача'
                                    isCompleted:
                                        type: boolean
                                        description: 'Выполнена ли задача'
                                        example: true
                                    createdAt:
                                        type: string
                                        description: 'Дата создания'
                                        example: '2021-10-28T16:19:44+00:00'
                                    completedAt:
                                        type: string
                                        description: 'Дата завершения'
                                        example: '2021-10-28T16:19:44+00:00'
                                        nullable: true
                                    updatedAt:
                                        type: string
                                        description: 'Дата обновления'
                                        example: '2021-10-28T16:19:44+00:00'
                                        nullable: true
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'

    /tasks/create:
        post:
            summary: 'Создать задачу'
            tags: [ 'Задачи' ]
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                taskName:
                                    type: string
                                    description: 'Наименование задачи'
                                    example: 'Моя первая задача'
                            required:
                                - taskName
            responses:
                200:
                    description: 'Задача создана'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorBadRequest'
                401:
                    description: 'Доступ запрещен'

    /tasks/{id}/update-task-name:
        post:
            summary: 'Обновить наименование задачи'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                taskName:
                                    type: string
                                    description: 'Наименование задачи'
                                    example: 'Моя вторая задача'
                            required:
                                - taskName
            responses:
                200:
                    description: 'Наименование задачи обновлено'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Ошибка запроса'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorBadRequest'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'

    /tasks/{id}/remove:
        post:
            summary: 'Удаляет задачу'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Задача удалена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'

    /tasks/{id}/complete:
        post:
            summary: 'Завершает задачу'
            tags: [ 'Задачи' ]
            parameters:
                -   $ref: '#/components/parameters/taskId'
            responses:
                200:
                    description: 'Задача завершена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                400:
                    description: 'Задача уже выполнена'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorBadRequest'
                404:
                    description: 'Задача не найдена'
                401:
                    description: 'Доступ запрещен'

    /export/tasks.{format}:
        get:
            summary: 'Экспорт задач в нужном формате'
            tags: [ 'Задачи' ]
            parameters:
                -   in: path
                    name: format
                    required: true
                    description: 'Формат (csv, xml)'
                    example: 'csv'
                    schema:
                        type: string
                        enum:
                            - csv
                            - xml
            responses:
                200:
                    description: 'Список задач успешно экспортирован'
                    content:
                        text/csv:
                            schema:
                                type: string
                                example: '2021-11-16T16:52:08+00:00,Задача 1,выполнена'
                        text/xml:
                            schema:
                                type: string
                                example: '<?xml version="1.0"?><response><item key="0"><id>da5b20a7-3c8b-4516-bc7c-7297c0e2f686</id><createdAt>2022-07-12T12:13:23+00:00</createdAt><taskName>Тестовая задача</taskName><isCompleted>0</isCompleted></item></response>'
                401:
                    description: 'Доступ запрещен'

components:
    securitySchemes:
        ApiTokenAuth:
            type: apiKey
            in: header
            name: X-AUTH-TOKEN
    schemas:
        successResponse:
            type: object
            properties:
                success:
                    enum: [ true ]
                    type: boolean
                    default: true
        errorBadRequest:
            type: object
            properties:
                error:
                    enum: [ true ]
                    type: boolean
                    default: true
                code:
                    type: integer
                    example: 400
                errorMessage:
                    type: string
                    example: 'Неверный формат запроса'
        errorResponse:
            type: object
            properties:
                error:
                    type: boolean
                    enum: [ true ]
                    default: true
                code:
                    type: integer
                    example: 1
                errorMessage:
                    type: string
                    example: 'Ошибка валидации'
        authResponse:
            type: object
            properties:
                token:
                    type: string
                    format: uuid
                    example: '123e4567-e89b-12d3-a456-426614174000'
                email:
                    type: string
                    format: email
                    example: 'test@test.com'
    parameters:
        taskId:
            name: id
            in: path
            required: true
            description: 'ID задачи'
            example: '123e4567-e89b-12d3-a456-426614174000'
            schema:
                type: string
                format: uuid
security:
    -   ApiTokenAuth: [ ]
