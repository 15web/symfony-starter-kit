openapi: 3.0.3
info:
    title: symfony-starter-kit
    version: 1.0.0
    description: Заготовка для проектов на symfony, примеры модулей
    contact:
        name: Студия 15
        url: https://www.15web.ru
        email: info@15web.ru
tags:
    - name: auth
      description: Аутентификация
    - name: tasks
      description: Задачи
    - name: articles
      description: Статьи
servers:
    - url: /api
paths:
    /sign-up:
        post:
            operationId: signUp
            summary: Регистрация пользователя
            tags:
                - auth
            security: []
            requestBody:
                description: Запрос на регистрацию
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: Email пользователя
                                    example: test@test.ru
                                password:
                                    type: string
                                    description: Пароль пользователя
                                    minLength: 6
                                    example: '123456'
                            additionalProperties: false
                            required:
                                - email
            responses:
                '200':
                    description: Пользователь успешно зарегистрирован
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/successResponse'
                                    - $ref: '#/components/schemas/errorResponse'
                '400':
                    description: Ошибка запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
    /confirm-email/{confirmToken}:
        get:
            operationId: confirmEmail
            summary: Подтверждение email
            tags:
                - auth
            security: []
            parameters:
                - $ref: '#/components/parameters/confirmToken'
            responses:
                '200':
                    description: Email подтвержден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '400':
                    description: Email уже подтвержден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '404':
                    description: Email с таким токеном не найден
    /sign-in:
        post:
            operationId: signIn
            summary: Аутентификация пользователя
            tags:
                - auth
            security: []
            requestBody:
                description: Запрос на аутентификацию
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: Email пользователя
                                    example: test@test.ru
                                password:
                                    type: string
                                    description: Пароль пользователя
                                    example: qwer1234
                            additionalProperties: false
                            required:
                                - email
                                - password
            responses:
                '200':
                    description: Аутентификация прошла успешно
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/authResponse'
                '400':
                    description: Ошибка запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Ошибка аутентификации
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Не верный логин или пароль
    /logout:
        get:
            operationId: logout
            summary: Выйти из приложения
            tags:
                - auth
            responses:
                '200':
                    description: Выход прошел успешно
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
    /tasks:
        get:
            operationId: tasksList
            summary: Список задач
            tags:
                - tasks
            parameters:
                -   $ref: '#/components/parameters/page'
                -   $ref: '#/components/parameters/perPage'
            responses:
                '200':
                    description: Возвращает список задач
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                    - pagination
                                additionalProperties: false
                                properties:
                                    pagination:
                                        $ref: '#/components/schemas/paginationResponse'
                                    data:
                                        type: array
                                        items:
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: ID задачи
                                                taskName:
                                                    type: string
                                                    description: Наименование задачи
                                                isCompleted:
                                                    type: boolean
                                                    description: Выполнена ли задача
                                                createdAt:
                                                    type: string
                                                    description: Дата создания
                                        example:
                                            -   id: dc8dbada-b154-4ffb-b21c-da70162e2704
                                                taskName: Моя первая задача
                                                isCompleted: true
                                                createdAt: '2021-10-28T16:19:44+00:00'
                                            -   id: 80b12ebd-e493-4dce-a104-7d30464cef43
                                                taskName: Моя вторая задача
                                                isCompleted: true
                                                createdAt: '2021-10-28T16:19:45+00:00'

                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
    /tasks/{id}:
        get:
            operationId: taskInfo
            summary: Подробная информация по задаче
            tags:
                - tasks
            parameters:
                - $ref: '#/components/parameters/taskId'
            responses:
                '200':
                    description: Возвращает подробную информацию по задаче
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - id
                                    - taskName
                                    - isCompleted
                                    - createdAt
                                    - completedAt
                                    - updatedAt
                                additionalProperties: false
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: ID задачи
                                    taskName:
                                        type: string
                                        description: Наименование задачи
                                    isCompleted:
                                        type: boolean
                                        description: Выполнена ли задача
                                    createdAt:
                                        type: string
                                        description: Дата создания
                                    completedAt:
                                        type: string
                                        description: Дата завершения
                                        nullable: true
                                    updatedAt:
                                        type: string
                                        description: Дата обновления
                                        nullable: true
                            example: {
                                id: dc8dbada-b154-4ffb-b21c-da70162e2704,
                                taskName: Моя первая задача,
                                isCompleted: true,
                                createdAt: '2021-10-28T16:19:44+00:00',
                                completedAt: '2021-10-28T16:19:44+00:00',
                                updatedAt: '2021-10-28T16:19:44+00:00'
                            }
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Задача не найдена
    /tasks/create:
        post:
            operationId: createTask
            summary: Создать задачу
            tags:
                - tasks
            requestBody:
                description: Запрос на создание задачи
                content:
                    application/json:
                        schema:
                            properties:
                                taskName:
                                    type: string
                                    description: Наименование задачи
                                    example: Моя первая задача
                            additionalProperties: false
                            required:
                                - taskName
            responses:
                '200':
                    description: Задача создана
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - id
                                additionalProperties: false
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: ID задачи
                            example: {
                                id: dc8dbada-b154-4ffb-b21c-da70162e2704,
                            }
                '400':
                    description: Ошибка запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
    /tasks/{id}/update-task-name:
        post:
            operationId: updateTaskName
            summary: Обновить наименование задачи
            tags:
                - tasks
            parameters:
                - $ref: '#/components/parameters/taskId'
            requestBody:
                description: Запрос на обновление наименования задачи
                content:
                    application/json:
                        schema:
                            properties:
                                taskName:
                                    type: string
                                    description: Наименование задачи
                                    example: Моя вторая задача
                            additionalProperties: false
                            required:
                                - taskName
            responses:
                '200':
                    description: Наименование задачи обновлено
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '400':
                    description: Ошибка запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Задача не найдена
    /tasks/{id}/remove:
        post:
            operationId: removeTask
            summary: Удаляет задачу
            tags:
                - tasks
            parameters:
                - $ref: '#/components/parameters/taskId'
            responses:
                '200':
                    description: Задача удалена
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Задача не найдена
    /tasks/{id}/complete:
        post:
            operationId: completeTask
            summary: Завершает задачу
            tags:
                - tasks
            parameters:
                - $ref: '#/components/parameters/taskId'
            responses:
                '200':
                    description: Задача завершена
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '400':
                    description: Задача уже выполнена
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Задача не найдена
    /tasks/{id}/add-comment:
        post:
            operationId: addCommentToTask
            summary: Добавление комментария к задаче
            tags:
                - tasks
            parameters:
                - $ref: '#/components/parameters/taskId'
            requestBody:
                description: Запрос на добавление комментария
                content:
                    application/json:
                        schema:
                            properties:
                                commentBody:
                                    type: string
                                    description: Текст комментария
                                    example: Мой первый комментарий
                            required:
                                - commentBody
            responses:
                '200':
                    description: Комментарий успешно добавлен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '400':
                    description: Нельзя добавлять комментарий в выполненную задачу
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Задача не найдена
    /tasks/{id}/comments:
        get:
            operationId: listTaskComments
            summary: Получить список комментариев к задаче
            tags:
                - tasks
            parameters:
                - $ref: '#/components/parameters/taskId'
            responses:
                '200':
                    description: Список
                    content:
                        application/json:
                            schema:
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: ID комментария
                                        example: dc8dbada-b154-4ffb-b21c-da70162e2704
                                    body:
                                        type: string
                                        description: Текст комментария
                                        example: Мой первый комментарий
                                    createdAt:
                                        type: string
                                        description: Дата создания
                                        example: '2021-10-28T16:19:44+00:00'
                                    updatedAt:
                                        type: string
                                        description: Дата обновления
                                        example: '2021-10-28T16:19:44+00:00'
                                        nullable: true
    /export/tasks.{format}:
        get:
            operationId: exportTasks
            summary: Экспорт задач в нужном формате
            tags:
                - tasks
            parameters:
                - in: path
                  name: format
                  required: true
                  description: Формат (csv, xml)
                  example: csv
                  schema:
                      type: string
                      enum:
                          - csv
                          - xml
                -   $ref: '#/components/parameters/page'
                -   $ref: '#/components/parameters/perPage'
            responses:
                '200':
                    description: Список задач успешно экспортирован
                    content:
                        text/csv:
                            schema:
                                type: string
                            example: '2021-11-16T16:52:08+00:00,Задача 1,выполнена'
                        text/xml:
                            schema:
                                type: string
                            example: '<?xml version="1.0"?><response><item key="0"><id>da5b20a7-3c8b-4516-bc7c-7297c0e2f686</id><createdAt>2022-07-12T12:13:23+00:00</createdAt><taskName>Тестовая задача</taskName><isCompleted>0</isCompleted></item></response>'
                '400':
                    description: Нет задач для экспорта
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: 'Нет задач для экспорта'
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
    /article/list:
        get:
            operationId: articleList
            summary: Получить список статей
            tags:
                - articles
            security: []
            responses:
                '200':
                    description: Возвращает список статей
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    required:
                                        - title
                                        - alias
                                        - body
                                    additionalProperties: false
                                    properties:
                                        title:
                                            type: string
                                            description: Заголовок
                                        alias:
                                            type: string
                                            description: Алиас
                                        body:
                                            type: string
                                            description: Контент
                                            nullable: true
                            example: [{
                                title: Первая статья,
                                alias: first-article,
                                body: Контент первой статьи
                            }]
    /article/{alias}/info:
        get:
            operationId: articleInfo
            summary: Получить данные по статье
            tags:
                - articles
            security: []
            parameters:
                - in: path
                  name: alias
                  required: true
                  description: Алиас статьи
                  example: first-article
                  schema:
                      type: string
            responses:
                '200':
                    description: Возвращает статью
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - title
                                    - body
                                additionalProperties: false
                                properties:
                                    title:
                                        type: string
                                        description: Заголовок
                                        example: Первая статья
                                    body:
                                        type: string
                                        description: Контент
                                        example: Контент первой статьи
                                        nullable: true
                            example: {
                                title: Первая статья,
                                body: Контент первой статьи
                            }
                '404':
                    description: Статья не найдена
    /admin/article/create:
        post:
            operationId: adminArticleCreate
            summary: Создать статью
            tags:
                - articles
            requestBody:
                description: Запрос на создание статьи
                content:
                    application/json:
                        schema:
                            properties:
                                title:
                                    type: string
                                    description: Заголовок
                                    example: Первая статья
                                alias:
                                    type: string
                                    description: Алиас
                                    example: first-article
                                body:
                                    type: string
                                    description: Контент
                                    example: Контент первой статьи
                                    nullable: true
                            additionalProperties: false
                            required:
                                - title
                                - alias
            responses:
                '200':
                    description: Статья создана
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/articleResponse'
                                    - $ref: '#/components/schemas/errorResponse'
                '400':
                    description: Ошибка запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
    /admin/article/{id}/update:
        post:
            operationId: adminArticleUpdate
            summary: Обновить статью
            tags:
                - articles
            parameters:
                - $ref: '#/components/parameters/articleId'
            requestBody:
                description: Запрос на обновление статьи
                content:
                    application/json:
                        schema:
                            properties:
                                title:
                                    type: string
                                    description: Заголовок
                                    example: Первая статья
                                alias:
                                    type: string
                                    description: Алиас
                                    example: first-article
                                body:
                                    type: string
                                    description: Контент
                                    example: Контент первой статьи
                                    nullable: true
                            additionalProperties: false
                            required:
                                - title
                                - alias
            responses:
                '200':
                    description: Статья обновлена
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/articleResponse'
                                    - $ref: '#/components/schemas/errorResponse'
                '400':
                    description: Ошибка запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 400
                                errorMessage: Неверный формат запроса
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Статья не найдена
    /admin/article/list:
        get:
            operationId: adminArticleList
            summary: Получить список статей
            tags:
                - articles
            responses:
                '200':
                    description: Список статей
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/articleResponseList'
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
    /admin/article/{id}/info:
        get:
            operationId: adminArticleInfo
            summary: Получить информацию по статье
            tags:
                - articles
            parameters:
                - $ref: '#/components/parameters/articleId'
            responses:
                '200':
                    description: Информация по статье
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/articleResponse'
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Статья не найдена
    /admin/article/{id}/remove:
        post:
            operationId: adminArticleRemove
            summary: Удалить статью
            tags:
                - articles
            parameters:
                - $ref: '#/components/parameters/articleId'
            responses:
                '200':
                    description: Статья удалена
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponse'
                '401':
                    description: Доступ запрещен
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            example:
                                error: true
                                code: 401
                                errorMessage: Необходимо пройти аутентификацию
                '404':
                    description: Статья не найдена
components:
    securitySchemes:
        ApiTokenAuth:
            type: apiKey
            in: header
            name: X-AUTH-TOKEN
    schemas:
        successResponse:
            type: object
            required:
                - success
            additionalProperties: false
            properties:
                success:
                    type: boolean
                    example: true
        errorResponse:
            type: object
            required:
                - error
                - code
                - errorMessage
            additionalProperties: false
            properties:
                error:
                    type: boolean
                    example: true
                code:
                    type: integer
                errorMessage:
                    type: string
            example:
                error: true
                code: 1
                errorMessage: Ошибка валидации
        authResponse:
            type: object
            required:
                - token
            additionalProperties: false
            properties:
                token:
                    type: string
                    format: uuid
                    example: 123e4567-e89b-12d3-a456-426614174000
        articleResponseList:
            type: array
            items:
                $ref: '#/components/schemas/articleResponse'
        articleResponse:
            type: object
            additionalProperties: false
            required:
                - id
                - title
                - alias
                - createdAt
            properties:
                id:
                    type: string
                    format: uuid
                    description: ID
                    example: dc8dbada-b154-4ffb-b21c-da70162e2704
                title:
                    type: string
                    description: Заголовок
                    example: Первая статья
                alias:
                    type: string
                    description: Алиас
                    example: first-article
                body:
                    type: string
                    description: Контент
                    example: Контент статьи
                    nullable: true
                createdAt:
                    type: string
                    description: Дата создания
                    example: '2021-10-28T16:19:44+00:00'
                updatedAt:
                    type: string
                    description: Дата обновления
                    example: '2021-10-28T16:19:44+00:00'
                    nullable: true
        paginationResponse:
            type: object
            properties:
                pagesCount:
                    type: integer
                    description: Количество страниц
                    example: 1
                total:
                    type: integer
                    description: Количество всех данных
                    example: 2
                perPage:
                    type: integer
                    description: Количество данных на странице
                    example: 10
                currentPage:
                    type: integer
                    description: Текущая страница
                    example: 1
    parameters:
        page:
            in: query
            name: page
            required: false
            description: Номер страницы
            example: 2
            schema:
                type: integer
        perPage:
            in: query
            name: per-page
            required: false
            description: Лимит
            example: 10
            schema:
                type: integer
        taskId:
            name: id
            in: path
            required: true
            description: ID задачи
            example: 123e4567-e89b-12d3-a456-426614174000
            schema:
                type: string
                format: uuid
        articleId:
            name: id
            in: path
            required: true
            description: ID статьи
            example: 123e4567-e89b-12d3-a456-426614174000
            schema:
                type: string
                format: uuid
        confirmToken:
            name: confirmToken
            in: path
            required: true
            description: Токен подтверждения
            example: 123e4567-e89b-12d3-a456-426614174000
            schema:
                type: string
                format: uuid
security:
    - ApiTokenAuth: []
