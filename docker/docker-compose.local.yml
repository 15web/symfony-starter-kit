version: '3.8'
services:
    backend:  &backend
        build:
            context: ./backend/
            target: base
            args:
                USER_ID: ${USER_ID}
        volumes:
            - ../backend:/app/
            - composer_cache:/home/dev/.composer
        env_file: backend/.env
        depends_on:
            db:
                condition: service_healthy
    backend-cli:
        <<: *backend
        depends_on: [ ]
        entrypoint: [ "" ]
        command: [ "php", "-v" ]
    messenger:
        build:
            context: ./backend/
            target: messenger
            args:
                USER_ID: ${USER_ID}
        volumes:
            - ../backend:/app/
        env_file: backend/.env
        depends_on:
            db:
                condition: service_healthy
    cron:
        build:
            context: ./backend/
            target: cron
            args:
                USER_ID: ${USER_ID}
        volumes:
            - ../backend:/app/
        env_file: backend/.env
        init: true
    nginx:
        build:
            context: ./nginx/
        ports:
            - ${NGINX_PORT}:80
        depends_on: [ backend ]
    db:
        build:
            context: ./postgres/
        volumes:
            - db:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT}:3306
        env_file: ./postgres/.env
        healthcheck:
            test: "pg_isready -d $$POSTGRES_DB"
            interval: 1s
            timeout: 100s
            retries: 50
    mailhog:
        image: mailhog/mailhog:v1.0.1
    docs:
        image: swaggerapi/swagger-ui:v4.17.0
        environment:
            SWAGGER_JSON_URL: /docs/openapi.yaml
            BASE_URL: /docs
        volumes:
            - ../backend/openapi.yaml:/usr/share/nginx/html/openapi.yaml:ro
    vacuum:
        image: dshanley/vacuum
        volumes:
            - ../backend/openapi.yaml:/app/openapi.yaml:ro
volumes:
    db:
    composer_cache:
